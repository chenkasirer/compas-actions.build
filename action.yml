name: "compas-actions.build"
description: "Build and test COMPAS or its plugins"

inputs:
  test_lint:
    description: "whether to test lint errors"
    required: true
    default: "false"
  test_compas:
    description: "whether to test with python -m compas"
    required: true
    default: "false"
  test:
    description: "whether to run invoke test"
    required: false
    default: "true"
  use_conda:
    description: "whether to build with conda"
    required: false
    default: "false"
  python:
    description: "which python version to build with"
    required: true
    default: "3.10"
  build_ghpython_components:
    description: 'Whether to build gh_python components'
    required: false
    default: 'false'

runs:
  using: "composite"
  steps:

    - uses: actions/checkout@v3

    # Build as PYPI package.
    - if: inputs.use_conda == 'false'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python }}
    
    - if: inputs.use_conda == 'false'
      shell: bash
      run: |
        echo "This is a PYPI package."

        python -m pip install --upgrade pip
        pip install cython --install-option='--no-cython-compile'
        pip install --no-cache-dir -r requirements-dev.txt

        if [[ ${{ inputs.test_lint }} = "true" ]]; then
          invoke lint
        fi;

        if [[ ${{ inputs.test_compas }} = "true" ]]; then
          python -m compas
        fi;
        
        invoke test

    - uses: NuGet/setup-nuget@v1.0.5
      if: inputs.build_ghpython_components == 'true'

    - shell: bash
      if: inputs.build_ghpython_components == 'true'
      run: |
        choco install ironpython --version=2.7.8.1

    - name: ðŸ¦— Build grasshopper components
      uses: compas-dev/compas-actions.ghpython_components@v2
      if: inputs.build_ghpython_components == 'true'
      with:
        source: src/compas_ghpython/components
        target: src/compas_ghpython/components/ghuser
  

    # Build as conda package.
    - if: inputs.use_conda == 'true'
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: latest
        channels: conda-forge
        activate-environment: compas
        python-version: ${{ inputs.python }}

    - if: inputs.use_conda == 'true'
      shell: bash -l {0}
      run: |
        echo "This is a conda package."

        if [[ ${{ runner.os }} == "Windows" && -f env_win.yml ]]; then
          echo using env_win.yml
          conda env update -f env_win.yml -n compas
        elif [[ ${{ runner.os }} == "macOS" && -f env_osx.yml ]]; then
          echo using env_osx.yml
          conda env update -f env_osx.yml -n compas
        elif [[ ${{ runner.os }} == "Linux" && -f env_linux.yml ]]; then
          echo using env_linux.yml
          conda env update -f env_linux.yml -n compas
        elif [[ -f environment.yml ]]; then
          echo using environment.yml
          conda env update -f environment.yml -n compas
        else
          echo ERROR: Failed find environment yml file.
          exit 1
        fi

        if [[ ${{ inputs.test_lint }} = "true" ]]; then
          invoke lint
        fi;

        if [[ ${{ inputs.test_compas }} = "true" ]]; then
          python -m compas
        fi;

        if [[ ${{ inputs.test }} = "true" ]]; then
          invoke test
        fi;
